import pandas as pd
import numpy as np
from sklearn import preprocessing


class MultiColumnLabelEncoder:
    def __init__(self, columns=None):
        self.columns = columns  # array of column names to encode

    def fit(self, X, y=None):
        return self  # not relevant here

    def transform(self, X):
        output = X.copy()
        if self.columns is not None:
            for col in self.columns:
                output[col] = preprocessing.LabelEncoder().fit_transform(output[col])
        else:
            for col_name, col in output.iteritems():
                output[col_name] = preprocessing.LabelEncoder().fit_transform(col)
        return output

    def fit_transform(self, X, y=None):
        return self.fit(X, y).transform(X)


# преобразуем колонку в единый вид
def get_word(x):
    x = x.lower().split(' ')
    res = ' '
    if 'распоряжение' in x:
        res = 'распоряжение'
    elif 'обращение' in x:
        res = 'обращение'
    elif 'письмо' in x:
        res = 'письмо'
    return res


def reverse_date(x):
    date = x.split('.')
    return date[2] + '.' + date[1] + '.' + date[0]


# матчим инцидент с конкретным видом работ из категории выше (чисто тест)
def check_in_type(x, alpabet):
    alpabet.keys()
    scores = {}
    for k, v in alpabet.items():
        for tp in v:
            if not isinstance(x, str) or x == '':
                scores['Другое'] = scores['Другое'] + 1 if scores.get('Другое') else 1
                continue
            if tp in x:
                if scores.get(k):
                    scores[k] += 1
                else:
                    scores[k] = 1
    # print('Очки', scores)
    if scores:
        # return max(scores, key=scores.get)
        res = max(scores, key=scores.get)
        if res == 'Другое':
            return 30
        return list(alpabet.keys()).index(res)
    else:
        return -1
        # return 30


alpabet = {
    'СК': ['строительный', 'контроль', 'ск'],
    'Подъезд': ['подъездов,', 'подъезд', 'инвалид', 'инвалид', 'полос', 'почтовый', 'почтовых',
                'входной двери', 'входная дверь', 'панельных швов', 'панельные швы', 'отделочных', 'отделка',
                'пандус', 'светильник'],
    'Окна': ['оконных', 'окна', 'окно'],
    'Проведение экспертизы': ['проведение', 'экспертизы', 'проектной', 'документации', 'проведение экспертизы'],
    'ПСД': ['проектная', 'проектной', 'документации', 'документация', 'псд'],
    'ЦО-М': ['теплоснабжения', 'цо-м', 'теплоснабжение', 'тепло', 'отопление', 'отопления'],
    'КАН-М': ['водоотведения', 'водоотведение', 'канализации', 'канализация', 'трубопроводы', 'кан-м',
              'воды', 'вода', 'трубопровод', 'колодца', 'подтопление', 'подтопления'],
    'ГВС-М': ['горячего', 'горячее', 'водоснабжения', 'водоснабжение', 'гвс-м'],
    'ХВС-М': ['холодного', 'холодное', 'водоснабжения', 'водоснабжение', 'хвс-м'],
    'Мусоропровод': ['мусоропровода', 'мусоропровод', 'мусор'],
    'ПВ': ['пожарного', 'пожарный', 'водопровода', 'водопровод', 'пв'],
    'ППАиДУ': ['дым', 'внутридомовой', 'системы', 'дымоудаления', 'противопожарной', 'автоматики', 'ппаиду',
               'пожарной'],
    'ЭС': ['электроснабжения', 'проводка', 'проводка', 'эс', 'электро', 'электропроводка', 'электропроводки'],
    'ГАЗ': ['газоснабжения', 'газоснабжение', 'газ', 'ковера', 'ковер'],
    'Подвал': ['подвальных', 'подвальный', 'подвал'],
    'ЦО': ['теплоснабжения', 'тепло', 'стояки', 'цо'],
    'КАН': ['водоотведения', 'водоотведение', 'канализации', 'канализация', 'кан', 'колодцы', 'колодец', 'засоры',
            'засор'],
    'ГВС': ['горячего', 'горячее', 'горячий', 'водоснабжения', 'водоснабжениие', 'гвс'],
    'Фундамент': ['фундамента', 'фундамент'],
    'ХВС': ['холодного', 'водоснабжения', 'водоснабжение', 'хвс'],
    'Крыша': ['крыши', 'крыша', 'кровля', 'кровли'],
    'ВДСК': ['водостока', 'водосток', 'вдск'],
    'Балкон': ['балконов', 'балкон', 'балконы'],
    'Фасад': ['фасада', 'фасад', 'фасадов', 'фасады'],
    'Разработка и проведение экспертизы ПД, в том числе АН за проведением работ по сохранению ОКН, выявленных ОКН, научное руководство проведением указанных работ в случае проведения работ по КР ОИ в МКД  г. Москвы, являющихся ОКН, выявленными ОКН.':
        ['разработка', 'проведение', 'экспертизы', 'числе', 'проведением', 'работ', 'сохранению', 'окн,', 'выявленных',
         'окн,', 'научное', 'руководство', 'проведением', 'указанных', 'работ', 'случае', 'проведения', 'работ',
         'москвы,', 'являющихся', 'окн,', 'выявленными', 'окн.',
         'разработка и проведение экспертизы пд, в том числе ан за проведением работ по сохранению окн, выявленных окн, научное руководство проведением указанных работ в случае проведения работ по кр ои в мкд  г. москвы, являющихся окн, выявленными окн.'],
    'Авторский надзор': ['авторский', 'надзор', 'авторский надзор'],
    'ПСД лифты': ['разработка', 'проектной', 'документации', 'лифтам', 'псд лифты'],
    'Лифт': ['лифтового', 'оборудования', 'лифт', 'лифты'],
    'Телемеханика': ['нет связи с пу', 'отсутствуют ',
                     'актуальные', 'значения', 'dsa',
                     'успд', 'угроза', 'взрыв', 'устройства', 'устройство', 'аномальное', 'значение',
                     'связь', 'связи', 'вибрации', 'датчик', 'интегральные', 't1', 'p1', 'p2', 'расхождение',
                     'расхождения', 'gsm'],
    'Освещение': ['освещения', 'освещение']}
