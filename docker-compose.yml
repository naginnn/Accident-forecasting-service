version: '3'

services:
#  frontend:
#    build:
#      context: ./frontend
#    restart: always
#    command: >
#      sh -c "npm start"
#    #    volumes:
#    #      - ./frontend:/app
#    ports:
#      - "3000:3000"

  db:
    image: postgres:alpine
    container_name: db
    restart: always
    env_file:
      - ./env_dev
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  auth:
    container_name: auth-api
    build:
      context: ./go_app
      dockerfile: ./internal/app/auth-api/Dockerfile
    restart: always
    ports:
      - "2223:2223"
    env_file:
      - ./env_dev
    volumes:
      - ./models:/models
    depends_on:
      - db

  obj:
    container_name: obj-api
    build:
      context: ./go_app
      dockerfile: ./internal/app/obj-api/Dockerfile
    restart: always
    ports:
      - "2224:2224"
    env_file:
      - ./env_dev
    volumes:
      - ./models:/models
    depends_on:
      - db

  train:
    container_name: train-api
    build:
      context: ./pt_app
      dockerfile: ./apps/train_api/Dockerfile
    restart: always
    command: >
      sh -c "python3 apps/train_api/server.py"
    ports:
      - "2225:2225"
    env_file:
      - ./env_dev
    volumes:
      - ./models:/models
#    depends_on:
#      - db

#  worker:
#    container_name: train-worker
#    build:
#      context: ./pt_app
#    restart: always
#    command: >
#      sh -c "cd /apps/train_api/ && python3 worker.py"
#    volumes:
#      - ./models:/models
#    env_file:
#      - ./env_dev
#    depends_on:
#      - db
#      - redis

#  learning:
#    build:
#      context: ./backend/services/learning
#    restart: always
#    command: >
#      sh -c "pipenv run python3 utils/wait_for_db.py &&
#             pipenv run python3 run.py"
#    volumes:
#      - ./backend/services/learning:/app
#      - ./backend/services/utils:/app/utils
#    ports:
#      - "2225:2225"
#    env_file:
#      - ./.env
#    depends_on:
#      - db
#      - redis


#  load_data:
#    build:
#      context: ./backend/services/load_data
#    restart: always
#    command: >
#      sh -c "pipenv run python3 utils/wait_for_db.py &&
#             pipenv run python3 run.py"
#    volumes:
#      - ./backend/services/load_data:/app
#      - ./backend/services/utils:/app/utils
#    ports:
#      - "2224:2224"
#    env_file:
#      - ./.env
#    depends_on:
#      - db
#
#
#  upload_data:
#    build:
#      context: ./backend/services/upload_data
#    restart: always
#    command: >
#      sh -c "pipenv run python3 utils/wait_for_db.py &&
#             pipenv run python3 run.py"
#    volumes:
#      - ./backend/services/upload_data:/app
#      - ./backend/services/utils:/app/utils
#    ports:
#      - "2226:2226"
#    env_file:
#      - ./.env
#    depends_on:
#      - db
#      - redis
#
#  upload_data_worker:
#    build:
#      context: ./backend/services/upload_data
#    restart: always
#    command: >
#      sh -c "pipenv run python3 utils/wait_for_db.py &&
#             pipenv run rq worker default low high"
#    volumes:
#      - ./backend/services/upload_data:/app
#      - ./backend/services/utils:/app/utils
#    env_file:
#      - ./.env
#    depends_on:
#      - db
#      - redis
#
#  redis:
#    image: redis:alpine
#    restart: always
#
#  db:
#    image: postgres:14.8-alpine
#    restart: always
#    env_file:
#      - ./.env
#    # Убрать секцию ports после успешного тестирования
#    ports:
#      - "5432:5432"
#    # Вынести данные (volumes)