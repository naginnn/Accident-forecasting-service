#version: '3.9'

services:
#  nginx:
#    container_name: nginx
#    build:
#      context: ./nginx
#      dockerfile: ./Dockerfile
#    ports:
#      - "80:80"
#      - "8000:8000"

  frontend:
    container_name: ui
    build:
      context: ./react_app
      dockerfile: ./Dockerfile
    restart: always
    command: >
      sh -c "npm install -i --save --force
      && npm run build
      && node server.js"
    ports:
      - "3000:3000"

  db:
    image: postgres:alpine
    container_name: db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
#    volumes:
#      - ./pg_data:/var/lib/postgresql/data
  
#
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  auth:
    container_name: auth-api
    build:
      context: ./go_app
      dockerfile: ./internal/app/auth-api/Dockerfile
    restart: always
    ports:
      - "2223:2223"
    env_file:
      - .env
    volumes:
      - ./models:/models
    depends_on:
      - db
    links:
      - db
  obj:
    container_name: obj-api
    build:
      context: ./go_app
      dockerfile: ./internal/app/obj-api/Dockerfile
    restart: always
    ports:
      - "2224:2224"
    env_file:
      - .env
    volumes:
      - ./models:/models
    depends_on:
      - db

  cb:
    container_name: cb-api
    build:
      context: ./go_app
      dockerfile: ./internal/app/cb-api/Dockerfile
    restart: always
    ports:
      - "2225:2225"
    env_file:
      - .env
    volumes:
      - ./models:/models
    depends_on:
      - db
    links:
      - db


  train:
    container_name: train-api
    build:
      context: ./pt_app
      dockerfile: ./apps/train_api/Dockerfile
      network: host
    restart: always
    command: >
      sh -c "python3 apps/train_api/server.py"
    ports:
      - "2226:2226"
    env_file:
      - ./.env
    volumes:
      - ./models:/models
    depends_on:
      - db
    links:
      - db

  worker:
    container_name: train-worker
    build:
      context: ./pt_app
      dockerfile: ./apps/train_api/Dockerfile
      network: host
    restart: always
    command: >
      sh -c "python3 apps/train_api/worker.py"
    env_file:
      - .env
    volumes:
      - ./models:/models
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
